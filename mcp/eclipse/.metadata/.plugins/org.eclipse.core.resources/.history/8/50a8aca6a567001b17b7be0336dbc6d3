// 
// Decompiled by Procyon v0.5.36
// 

package CakeClient;

import org.lwjgl.opengl.Display;
import CakeClient.modules.combat.KillAura;
import CakeClient.modules.movement.NoFall;
import CakeClient.modules.movement.Fly;
import CakeClient.modules.render.FullBright;
import CakeClient.modules.movement.PermaSprint;
import CakeClient.modules.Module;
import CakeClient.ui.HUD;

public class Client
{
    public static String name;
    public static HUD hud;
    public static Module[] modules;
    
    static {
        Client.name = "Cake Client 1.8";
        Client.hud = new HUD(35, 200, 208, 205);
        Client.modules = new Module[] { 
        		(Module)new PermaSprint(), 
        		(Module)new FullBright(), 
        		(Module)new Fly(), 
        		(Module)new NoFall(),  
        		(Module)new KillAura() 
        		};
    }
    
    public static void startup() {
        Display.setTitle(Client.name);
        System.out.println("Loaded " + Client.modules.length + " modules");
    }
    
    public static void onEvent() {
        Module[] modules;
        for (int length = (modules = Client.modules).length, i = 0; i < length; ++i) {
            final Module m = modules[i];
            if (m.enabled) {
                m.onUpdate();
            }
        }
    }
    
    public static void onDraw() {
        Client.hud.onDraw();
        Module[] modules;
        for (int length = (modules = Client.modules).length, i = 0; i < length; ++i) {
            final Module m = modules[i];
            if (m.enabled) {
                m.onDraw();
            }
        }
    }
    
    public static void keyPress(final int key) {
        Client.hud.keyUpdate(key);
        Module[] modules;
        for (int length = (modules = Client.modules).length, i = 0; i < length; ++i) {
            final Module m = modules[i];
            m.keyUpdate(key);
        }
    }
}